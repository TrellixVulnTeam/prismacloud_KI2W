{"version":3,"file":"datepicker-input.d.ts","sources":["datepicker-input.d.ts"],"names":[],"mappingssourcesContent":["import { ElementRef, Renderer2, TemplateRef, ChangeDetectorRef, EventEmitter, OnInit, OnChanges, SimpleChanges, OnDestroy, NgZone } from '@angular/core';\nimport { ControlValueAccessor, Validator, AbstractControl, ValidationErrors } from '@angular/forms';\nimport { CdkConnectedOverlay, ConnectionPositionPair } from '@angular/cdk/overlay';\nimport { FocusTrapFactory } from '@angular/cdk/a11y';\nimport { HostService } from '../../common/host/host.service';\nimport { NglDateAdapter } from '../adapters/date-fns-adapter';\nimport { NglDatepickerConfig } from '../config';\nimport { IDatepickerInput } from './datepicker-input.interface';\nexport declare class NglDatepickerInput implements ControlValueAccessor, Validator, OnInit, OnChanges, OnDestroy {\n    private element;\n    private renderer;\n    private cd;\n    private hostService;\n    private ngZone;\n    private focusTrapFactory;\n    private adapter;\n    /**\n     * Label that appears above the input.\n     */\n    label: string | TemplateRef<any>;\n    /**\n     * Pre-defined format to use.\n     */\n    format: 'big-endian' | 'little-endian' | 'middle-endian';\n    /**\n     * Delimiter to use on pre-defined formats.\n     */\n    delimiter: any;\n    /**\n     * Disable input and calendar.\n     */\n    disabled: boolean;\n    /**\n     * Aligns the right or left side of the dropdown menu with the respective side of the input.\n     */\n    dropdownAlign: 'left' | 'right';\n    /**\n     * The date value.\n     */\n    set value(value: Date | string | null);\n    get value(): Date | string | null;\n    /**\n     * Whether to open the datepicker when a mouse user clicks on the input.\n     */\n    openOnInputClick: boolean;\n    /**\n     * Emits when selected date changes.\n     */\n    valueChange: EventEmitter<string | Date>;\n    inputEl: IDatepickerInput;\n    cdkOverlay: CdkConnectedOverlay;\n    /**\n     * The minimum valid date.\n     */\n    readonly min: Date;\n    /**\n     * The maximum valid date.\n     */\n    readonly max: Date;\n    /**\n     * Text for button to open calendar.\n     */\n    readonly selectDateLabel = \"Select a date\";\n    /**\n     * Whether to use the accepted pattern as placeholder.\n     */\n    patternPlaceholder: boolean;\n    /**\n     * Datepicker inputs\n     */\n    monthNames: ReadonlyArray<string>;\n    dayNamesShort: ReadonlyArray<string>;\n    dayNamesLong: ReadonlyArray<string>;\n    firstDayOfWeek: number;\n    showToday: boolean;\n    dateDisabled: (date: Date) => boolean | null;\n    relativeYearFrom: number;\n    relativeYearTo: number;\n    todayLabel: string;\n    previousMonthLabel: string;\n    nextMonthLabel: string;\n    date: Date;\n    uid: string;\n    overlayPositions: ConnectionPositionPair[];\n    set open(open: boolean);\n    get open(): boolean;\n    private _open;\n    private _value;\n    private pattern;\n    private config;\n    private focusTrap;\n    constructor(defaultConfig: NglDatepickerConfig, locale: string, element: ElementRef, renderer: Renderer2, cd: ChangeDetectorRef, hostService: HostService, ngZone: NgZone, focusTrapFactory: FocusTrapFactory, adapter: NglDateAdapter);\n    onChange: Function | null;\n    onTouched: () => void;\n    validatorChange: () => void;\n    validate(c: AbstractControl): ValidationErrors | null;\n    writeValue(value: Date): void;\n    registerOnChange(fn: (value: any) => any): void;\n    registerOnTouched(fn: () => any): void;\n    registerOnValidatorChange(fn: () => void): void;\n    setDisabledState(disabled: boolean): void;\n    onBlur(): void;\n    ngOnInit(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    ngOnDestroy(): void;\n    onKeyboardInput(evt: KeyboardEvent): void;\n    onInputChange(): void;\n    openCalendar(): void;\n    onAttach(): void;\n    onDetach(): void;\n    closeCalendar(focusInput?: boolean): void;\n    onTriggerClick(origin: 'input' | 'button'): void;\n    pickerSelection(date: Date): void;\n    updateDatepickerSize(width: number, height: number): void;\n    private setPositions;\n    private formatInputValue;\n    private updateInputValue;\n    private dateParse;\n    private dateFormat;\n    private getPattern;\n    private setPattern;\n    private emitSelection;\n    private setHostClass;\n}\n"]}