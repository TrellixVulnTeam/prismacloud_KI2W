{"version":3,"file":"colorpicker.d.ts","sources":["colorpicker.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, Renderer2, ChangeDetectorRef, TemplateRef } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { IHSV } from './util';\nimport { NglColorpickerConfig } from './config';\nexport declare class NglColorpicker implements ControlValueAccessor {\n    private el;\n    private renderer;\n    private cd;\n    /**\n     * An input label as for a form.\n     */\n    label: string;\n    /**\n     * Placeholder of input box.\n     */\n    placeholder: string;\n    /**\n     * Text for cancel button on popover.\n     */\n    cancelButtonLabel: string;\n    /**\n     * Text for submit button of popover.\n     */\n    submitButtonLabel: string;\n    /**\n     * Highlights the input as a required field (does not perform any validation).\n     */\n    required: boolean;\n    /**\n     * A tooltip that is displayed next to the label.\n     */\n    fieldLevelHelpTooltip: string | TemplateRef<any>;\n    /**\n     * Error message when hex color input is invalid.\n     */\n    invalidColorLabel: string | TemplateRef<any>;\n    /**\n     * Text for swatch tab of popover.\n     */\n    swatchTabLabel: string;\n    /**\n     * Text for custom tab of popover.\n     */\n    customTabLabel: string;\n    /**\n     * Hex color values which are used to set the options of the swatch tab of the colorpicker popover.\n     */\n    swatchColors: string[];\n    /**\n     * Whether to make the hex color input readonly.\n     */\n    readonlyInput: boolean;\n    /**\n     * Determines which tab is visible when popover opens.\n     */\n    defaultSelectedTab: 'swatches' | 'custom';\n    /**\n     * Configures to show both or which one of the color selection interfaces.\n     */\n    variant: 'base' | 'swatches' | 'custom';\n    color: string;\n    uid: string;\n    open: boolean;\n    disabled: boolean;\n    hexCurrent: string;\n    hsvCurrent: {\n        hue: any;\n        saturation: number;\n        value: number;\n    };\n    constructor(defaultConfig: NglColorpickerConfig, el: ElementRef, renderer: Renderer2, cd: ChangeDetectorRef);\n    onChange: (_: any) => void;\n    onTouched: () => void;\n    writeValue(value: string): void;\n    registerOnChange(fn: (value: any) => any): void;\n    registerOnTouched(fn: () => any): void;\n    setDisabledState(isDisabled: boolean): void;\n    onSwatchSelection(hex: string): void;\n    onCustomSelection(hsv: IHSV): void;\n    openChange(open: boolean): void;\n    cancel(): void;\n    done(): void;\n    canApply(): boolean;\n    onInput(hex: string): void;\n    get isValidInput(): boolean;\n}\n"]}