{"version":3,"file":"datatable.d.ts","sources":["datatable.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ChangeDetectorRef, QueryList, EventEmitter, AfterContentInit, OnDestroy } from '@angular/core';\nimport { NglDatatableColumn } from './column';\nimport { NglDatatableLoadingOverlay, NglDatatableNoRowsOverlay } from './overlays';\nexport interface INglDatatableSort {\n    key: string;\n    order: 'asc' | 'desc';\n}\nexport interface INglDatatableRowClick {\n    event: Event;\n    data: any;\n}\nexport declare class NglDatatable implements AfterContentInit, OnDestroy {\n    private detector;\n    data: any[];\n    trackByKey: string;\n    sort: INglDatatableSort;\n    sortChange: EventEmitter<INglDatatableSort>;\n    loading: boolean;\n    loadingOverlay: NglDatatableLoadingOverlay;\n    get showLoading(): NglDatatableLoadingOverlay;\n    noRowsOverlay: NglDatatableNoRowsOverlay;\n    columns: QueryList<NglDatatableColumn>;\n    rowClick: EventEmitter<INglDatatableRowClick>;\n    private _columnsSubscription;\n    constructor(detector: ChangeDetectorRef);\n    columnTrackBy(index: number, column: NglDatatableColumn): string | number;\n    dataTrackBy: (index: number, data: any) => any;\n    onColumnSort(column: NglDatatableColumn, order: 'asc' | 'desc'): void;\n    getColumnSortOrder(column: NglDatatableColumn): \"desc\" | \"asc\";\n    onRowClick(event: Event, data: any): void;\n    ngAfterContentInit(): void;\n    ngOnDestroy(): void;\n}\n"]}