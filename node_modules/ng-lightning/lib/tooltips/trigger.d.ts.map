{"version":3,"file":"trigger.d.ts","sources":["trigger.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, TemplateRef, ViewContainerRef, OnDestroy, OnChanges, SimpleChanges, EventEmitter, Renderer2 } from '@angular/core';\nimport { Overlay } from '@angular/cdk/overlay';\nimport { Placement } from '../util/overlay-position';\nimport { NglTooltipConfig } from './config';\nexport declare class NglTooltipTrigger implements OnChanges, OnDestroy {\n    private element;\n    private renderer;\n    private viewContainerRef;\n    private overlay;\n    /**\n     * The content as string or the connected template reference to show.\n     */\n    template: string | TemplateRef<void>;\n    /**\n     * Position relative to host element.\n     */\n    set placement(placement: Placement);\n    get placement(): Placement;\n    /**\n     * Delay in milliseconds until it opens/closes.\n     */\n    set delay(_delay: any | any[]);\n    /**\n     * Whether the floating tooltip is visible.\n     */\n    set nglOpen(open: boolean);\n    get nglOpen(): boolean;\n    /**\n     * Open/close without two-way binding input.\n     */\n    openAuto: boolean;\n    /**\n     * Gives the possibility to interact with the content of the popover.\n     */\n    interactive: boolean;\n    /**\n     * Extra class(es) you want to apply to tooltip host element.\n     */\n    tooltipClass: any;\n    /**\n     * Emit an event when actual tooltip is shown or hidden.\n     */\n    nglTooltipOpenChange: EventEmitter<boolean>;\n    uid: string;\n    /** Names of properties that should be proxy to child component. */\n    private needProxyProperties;\n    private _placement;\n    private _open;\n    private portal;\n    private overlayRef;\n    private tooltip;\n    private openDelay;\n    private closeDelay;\n    private toggleTimeout;\n    private positionChangesSubscription;\n    private overlayListeners;\n    private overlayElement;\n    private config;\n    constructor(defaultConfig: NglTooltipConfig, element: ElementRef, renderer: Renderer2, viewContainerRef: ViewContainerRef, overlay: Overlay);\n    ngOnChanges(changes: SimpleChanges): void;\n    onMouseOver(): void;\n    onMouseOut(): void;\n    ngOnDestroy(): void;\n    open(delay?: number): void;\n    close(delay?: number): void;\n    toggle(): void;\n    private handle;\n    private emitOpen;\n    private create;\n    /** Detaches the currently-attached tooltip. */\n    private detach;\n    /** Create the overlay config and position strategy */\n    private createOverlay;\n    /** Updates the position of the current tooltip. */\n    private updatePosition;\n    private updateTooltip;\n    /**\n     * Set inputs of child components when this component's inputs change.\n     */\n    private updateProxies;\n}\n"]}