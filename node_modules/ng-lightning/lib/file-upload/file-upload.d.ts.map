{"version":3,"file":"file-upload.d.ts","sources":["file-upload.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, Renderer2, TemplateRef, OnChanges, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor, Validator, AbstractControl, ValidationErrors } from '@angular/forms';\nexport declare class NglFileUpload implements ControlValueAccessor, Validator, OnChanges {\n    private element;\n    private renderer;\n    /**\n     * Label that appears above the upload area.\n     */\n    label: string | TemplateRef<any>;\n    /**\n     * File types that can be accepted. See [input accept Attribute](https://www.w3schools.com/tags/att_input_accept.asp).\n     */\n    accept: string | string[];\n    /**\n     * Whether file selection is disabled.\n     */\n    disabled: boolean;\n    /**\n      * How many files can be selected simultaneously. `0` means unlimited.\n      */\n    maxFiles: number;\n    /**\n     * File size limit in bytes. `0` means unlimited.\n     */\n    maxFilesize: number;\n    /**\n     * Message to display when there is in an error state.\n     */\n    error: string | TemplateRef<any>;\n    /**\n     * Text for button to open file selector.\n     */\n    uploadButtonLabel: string;\n    /**\n     * Text to display inside drop zone.\n     */\n    dropZoneLabel: string;\n    uid: string;\n    isDragOver: boolean;\n    files: File[];\n    constructor(element: ElementRef, renderer: Renderer2);\n    onChange: Function | null;\n    onTouched: () => void;\n    validatorChange: () => void;\n    writeValue(value: File[]): void;\n    registerOnChange(fn: (value: any) => any): void;\n    registerOnTouched(fn: () => any): void;\n    registerOnValidatorChange(fn: () => void): void;\n    setDisabledState(isDisabled: boolean): void;\n    validate(c: AbstractControl): ValidationErrors | null;\n    ngOnChanges(changes: SimpleChanges): void;\n    onDropZone(evt: DragEvent): void;\n    onInputChange(files: FileList): void;\n    private select;\n}\n"]}