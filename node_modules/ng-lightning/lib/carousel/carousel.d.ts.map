{"version":3,"file":"carousel.d.ts","sources":["carousel.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { QueryList, EventEmitter, OnChanges, SimpleChanges, ElementRef } from '@angular/core';\nimport { NglCarouselImage } from './carousel-image';\nimport { NglCarouselIndicator } from './carousel-indicator';\nexport declare class NglCarousel implements OnChanges {\n    private document;\n    readonly active: any;\n    activeChange: EventEmitter<number>;\n    /**\n     * The auto scroll duration in seconds. After that the next image is displayed.\n     */\n    scrollDuration: number;\n    /**\n     * Whether auto scroll is enabled.\n     */\n    autoScroll: boolean;\n    /**\n     * Whether the carousel should continue looping from the beginning after the last item is displayed.\n     */\n    autoRefresh: boolean;\n    images: QueryList<NglCarouselImage>;\n    indicators: QueryList<NglCarouselIndicator>;\n    indicatorsEl: ElementRef<HTMLElement>;\n    readonly labels: {\n        startAutoPlay: string;\n        stopAutoPlay: string;\n    };\n    playing: boolean;\n    private nextTimer;\n    constructor(document: any);\n    isActive(index: number): boolean;\n    getImage(index: number): NglCarouselImage;\n    ngOnChanges(changes: SimpleChanges): void;\n    onIndicatorClick(index: number): void;\n    onKeyboard(evt: KeyboardEvent): void;\n    setActive(index: number, stopPlaying?: boolean): void;\n    togglePlay(): void;\n    playLabel(): string;\n    private activateNext;\n    private setTimer;\n}\n"]}