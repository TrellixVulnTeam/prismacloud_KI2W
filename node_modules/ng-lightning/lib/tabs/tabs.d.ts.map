{"version":3,"file":"tabs.d.ts","sources":["tabs.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { QueryList, EventEmitter, ElementRef, Renderer2, AfterContentInit } from '@angular/core';\nimport { NglTab } from './tab';\nexport declare class NglTabs implements AfterContentInit {\n    private element;\n    private renderer;\n    set variant(variant: 'default' | 'scoped');\n    get variant(): 'default' | 'scoped';\n    tabs: QueryList<NglTab>;\n    activeTab: NglTab;\n    selected: string | number | NglTab;\n    set setSelected(selected: string | number | NglTab);\n    selectedChange: EventEmitter<NglTab>;\n    /**\n     * Whether every tab's content is instantiated when visible, and destroyed when hidden.\n     */\n    lazy: boolean;\n    private _variant;\n    constructor(element: ElementRef, renderer: Renderer2);\n    ngAfterContentInit(): void;\n    select(tab: NglTab): void;\n    move(evt: Event, moves: number): void;\n    tabClass(tab: NglTab): string;\n    trackByTab(index: any, tab: NglTab): string;\n    private activate;\n    private findTab;\n}\n"]}