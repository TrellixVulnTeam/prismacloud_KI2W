{"version":3,"file":"button-icon-stateful.d.ts","sources":["button-icon-stateful.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, Renderer2, OnInit, OnChanges, EventEmitter } from '@angular/core';\nimport { HostService } from '../common/host/host.service';\nexport declare class NglButtonIconStateful implements OnInit, OnChanges {\n    private el;\n    private hostService;\n    /**\n     * Specifies whether button is in selected state or not.\n     */\n    selected: boolean;\n    selectedChange: EventEmitter<boolean>;\n    /**\n     * LDS name of the icon.\n     * Names are written in the format 'utility:down' where 'utility' is the category, and 'down' is the specific icon to be displayed.\n     * Only utility icons can be used in this component.\n     */\n    iconName: string;\n    /**\n     * Fallback value for `alternativeText`.\n     */\n    title: string;\n    /**\n     * The alternative text used to describe the icon.\n     * This text should describe what happens, not what the icon looks like.\n     */\n    alternativeText: any;\n    /**\n     * The variant changes the appearance of the button.\n     */\n    variant: 'border' | 'border-filled' | 'border-inverse';\n    /**\n     *  The size of the button.\n     */\n    size: 'xx-small' | 'x-small' | 'small' | null;\n    get altText(): any;\n    constructor(el: ElementRef, hostService: HostService, renderer: Renderer2);\n    onclick(): void;\n    ngOnInit(): void;\n    ngOnChanges(): void;\n    private setHostClass;\n}\n"]}