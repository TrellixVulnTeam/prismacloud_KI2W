{"version":3,"file":"dropdown.d.ts","sources":["dropdown.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, ElementRef, OnInit, OnDestroy, QueryList, Renderer2 } from '@angular/core';\nimport { NglDropdownItem } from './dropdown-item';\nexport declare class NglDropdown implements OnInit, OnDestroy {\n    element: ElementRef;\n    renderer: Renderer2;\n    set isOpen(isOpen: boolean);\n    get isOpen(): boolean;\n    handlePageEvents: boolean;\n    items: QueryList<NglDropdownItem>;\n    isOpenChange: EventEmitter<boolean>;\n    triggerFocusEventEmitter: EventEmitter<any>;\n    private _isOpen;\n    private openEventSubscription;\n    private globalClickEventUnsubscriber;\n    private clickEventUnsubscriber;\n    private globalClickTimeout;\n    onKeydownClose(eventName: string): void;\n    onKeydownFocusNext($event: Event, direction: 'next' | 'previous'): void;\n    constructor(element: ElementRef, renderer: Renderer2);\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    toggle(toggle?: boolean, focus?: boolean): void;\n    private handleGlobalClickEvent;\n    private _subscribeToClickEvents;\n    private _unsubscribeFromClickEvents;\n    private clearGlobalClickTimeout;\n    private focusItem;\n    private handleDropdownOpenEvent;\n}\n"]}